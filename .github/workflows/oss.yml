# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish OSS Conductor release to Maven Central
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
jobs:
  publish:
    runs-on: ubuntu-latest
    environment: prod
    name: Gradle Build and Publish OSS Conductor Main Fork
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Zulu JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Publish
        run: |
          export CONDUCTOR_VERSION=${{ github.event.inputs.version }}
          echo "CONDUCTOR_VERSION is $CONDUCTOR_VERSION"
          echo "Tag to checkout and publish v$CONDUCTOR_VERSION"
          git clone -b v$CONDUCTOR_VERSION https://github.com/orkes-io/conductor.git
          cd conductor 
          git checkout tags/v$CONDUCTOR_VERSION
          git describe --tags --abbrev=0
          ls -ltr
          echo "Updating build.gradle - and printing its content"
          cat ../deploy.gradle
          cp ../deploy.gradle .
          sed '/nebula.netflixoss/d;' build.gradle > build2.gradle
          mv build2.gradle build.gradle
          echo "apply from: "\"\$rootDir/deploy.gradle\""" >> build.gradle
          cat build.gradle
          cat deploy.gradle
          echo "Here is where we do a build and release"
          ./gradlew -x test publish -PmavenCentral -Pusername=${{ secrets.SONATYPE_USERNAME }} -Ppassword=${{ secrets.SONATYPE_PASSWORD }}
          echo "All done"
    env:
      ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
